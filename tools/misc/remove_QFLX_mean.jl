using Formatting
using ArgParse, JSON
using NCDatasets

println("""
This program output the forcing file with QFLXT and QFLXS from QFLXT and QFLXS
variables in history files. It also needs the data folder generated by program
main_concat_and_convert_units.jl that has monthly TEMP and SALT profile.
""")



function runOneCmd(cmd)
    println(">> ", string(cmd))
    run(cmd)
end


function pleaseRun(cmd)
    if isa(cmd, Array)
        for i = 1:length(cmd)
            runOneCmd(cmd[i])
        end
    else
        runOneCmd(cmd)
    end
end

function parse_commandline()

    s = ArgParseSettings()

    @add_arg_table s begin

        "--input-file"
            help = "Casename"
            arg_type = String
            required = true

        "--output-file"
            help = "Casename"
            arg_type = String
            default = ""
    
    end

    return parse_args(s)
end

parsed = parse_commandline()

JSON.print(parsed,4)

output_file = parsed["output-file"]
input_file = parsed["input-file"]


Dataset(input_file, "r") do ds

    global Nx, Ny, Nz, Nt = size(ds["QFLXT"])

    ref = nomissing(ds["QFLXT"][:, :, :, 1], NaN)
    area = reshape(ds["area_sT"][:], Nx, Ny,  1)
    dz   = reshape(ds["dz_cT"][:],    1,  1, Nz)



    global valid_idx = isfinite.(ref)
    global mask = zeros(Float64, Nx, Ny, Nz)
    
    mask[valid_idx] .= 1.0

    tmp_QFLXT = zeros(Float64, Nx, Ny, Nz)
    tmp_QFLXS = copy(tmp_QFLXT)
    for t=1:Nt
        tmp_QFLXT .+= nomissing(ds["QFLXT"][:, :, :, t], 0.0)
        tmp_QFLXS .+= nomissing(ds["QFLXS"][:, :, :, t], 0.0)
    end
    tmp_QFLXT ./= Nt
    tmp_QFLXS ./= Nt

    vol = area .* dz
    vol .*= mask
    
    global sum_vol, total_QFLXT, total_QFLXS, mean_QFLXT, mean_QFLXS 

    sum_vol = sum(vol)

    total_QFLXT = sum(vol .* tmp_QFLXT)
    total_QFLXS = sum(vol .* tmp_QFLXS)

    mean_QFLXT = total_QFLXT / sum_vol
    mean_QFLXS = total_QFLXS / sum_vol

end


println(format("Total volume : {:.2e}", sum_vol))
println(format("Total, Mean QFLXT   : {:.2e}, {:.2e}", total_QFLXT, mean_QFLXT))
println(format("Total, Mean QFLXS   : {:.2e}, {:.2e}", total_QFLXS, mean_QFLXS))


if output_file != ""
    println("Output file : $output_file")
    pleaseRun(`ncap2 -s "QFLXT=QFLXT-($(mean_QFLXT));QFLXS=QFLXS-($(mean_QFLXS));" $(input_file) $(output_file)`)
end
